{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "task template",
    "Metadata": {

    },
    "Parameters": {

    },
    "Mappings": {

    },
    "Conditions": {

    },
    "Resources": {
      "tasked": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": "111.0.0.0/16",
          "EnableDnsHostnames": true,
          "Tags": [{ "Key": "Name", "Value":  "tasked" }]
        }
      },
      "taskedsub1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "us-east-1a",
          "MapPublicIpOnLaunch": true,
          "VpcId": { "Ref": "tasked" },
          "CidrBlock": "111.0.1.0/24",
          "Tags": [{ "Key": "Name", "Value":  "taskedsub1" }]
        }
      },
      "taskedsub2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "us-east-1b",
          "MapPublicIpOnLaunch": true,
          "VpcId": { "Ref": "tasked" },
          "CidrBlock": "111.0.2.0/24",
          "Tags": [{ "Key": "Name", "Value":  "taskedsub2" }]
        }
      },
      "taskedsub3": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "AvailabilityZone": "us-east-1c",
          "VpcId": { "Ref": "tasked" },
          "CidrBlock": "111.0.3.0/24",
          "Tags": [{ "Key": "Name", "Value":  "taskedsub3" }]
        }
      },
      "taskedigw": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [{ "Key": "Name", "Value":  "taskedigw" }]
        }
      },
      "AttachGateway": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": { "Ref": "tasked" },
          "InternetGatewayId": { "Ref": "taskedigw" }
        }
      },
      "taskedrouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": { "Ref": "tasked" },
          "Tags": [{ "Key": "Name", "Value":  "taskedrouteTable" }]
        }
      },
      "taskedroutes": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": { "Ref": "taskedrouteTable" },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": { "Ref": "taskedigw" }
        }
      },
      "taskedsub1routeTableAssoc": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "taskedsub1" },
          "RouteTableId": { "Ref": "taskedrouteTable" }
        }
      },
      "taskedsub2routeTableAssoc": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "taskedsub2" },
          "RouteTableId": { "Ref": "taskedrouteTable" }
        }
      },
      "taskedSG" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "SG for ssh http",
          "SecurityGroupIngress" : [
            {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0"},
            {"IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "0.0.0.0/0"}
          ],
          "VpcId" : { "Ref": "tasked" },
          "Tags" :  [{ "Key": "Name", "Value":  "taskedSG" }]
        }
      },
      "ELBSG" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupName": "ELBSG",
          "GroupDescription" : "SG for ELB traffic",
          "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
            { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
          ],
          "VpcId" : { "Ref": "tasked" },
          "Tags" :  [ { "Key": "Name", "Value":  "ELBSG" } ]
        }
      },
      "taskrdsSG" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "internal connection between instance and rds",
          "SecurityGroupIngress" : [
              {"IpProtocol": "tcp", "FromPort": "3306", "ToPort": "3306", "CidrIp": "111.0.1.0/24"},
              {"IpProtocol": "tcp", "FromPort": "3306", "ToPort": "3306", "CidrIp": "111.0.2.0/24"}
          ],
          "VpcId" : { "Ref": "tasked" },
          "Tags" :  [ { "Key": "Name", "Value":  "taskrdsSG" } ]
        }
      },
      "taskrdsDBSubnetGroup": {
         "Type": "AWS::RDS::DBSubnetGroup",
         "Properties": {
            "DBSubnetGroupDescription": "subnetgroup for db instance",
            "SubnetIds": [ { "Ref": "taskedsub1" }, { "Ref": "taskedsub2" } ],
            "Tags": [ { "Key": "Name", "Value":  "taskrdsDBSubnetGroup" } ]
         }
      },
      "taskedrdsDBInstance": {
        "Type": "AWS::RDS::DBInstance",
        "Properties": {
          "AllocatedStorage": "20",
          "DBInstanceClass": "db.t3.micro",
          "AllowMajorVersionUpgrade": "false",
          "AutoMinorVersionUpgrade": "false",
          "BackupRetentionPeriod": "0",
          "DBInstanceIdentifier": "taskdb",
          "DBName": "taskdb",
          "DBSubnetGroupName": { "Ref": "taskrdsDBSubnetGroup" },
          "Engine": "MariaDB",
          "EngineVersion": "10.6.7",
          "MasterUsername": "admin",
          "MasterUserPassword": "keyspace",
          "MultiAZ": "false",
          "Port": "3306",
          "PubliclyAccessible": "false",
          "StorageType": "gp2",
          "Tags": [{ "Key": "Name", "Value":  "taskedrdsDBInstance" }],
          "VPCSecurityGroups": [ { "Ref": "taskrdsSG" } ]
        }
      },
    "WebServerTargetGroup":{
      "Type":"AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties":{
        "Name":"WebServerTargetGroup",
        "Port":80,
        "Protocol":"HTTP",
        "HealthCheckEnabled": "True",
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 3,
        "TargetGroupAttributes":[
          {
            "Key":"deregistration_delay.timeout_seconds",
            "Value":"20"
          }
        ],
        "VpcId": { "Ref": "tasked" },
        "Tags": [ { "Key": "Name", "Value":  "WebServerTargetGroup" }]
      }
    },
    "taskalb":{
  "Type":"AWS::ElasticLoadBalancingV2::LoadBalancer",
  "Properties":{
    "Scheme":"internet-facing",
    "Subnets":[
      {
        "Ref":"taskedsub1"
      },
      {
        "Ref":"taskedsub2"
      }
    ],
    "LoadBalancerAttributes":[
      {
        "Key":"idle_timeout.timeout_seconds",
        "Value":"50"
      }
    ],
    "SecurityGroups":[
      {
        "Ref":"ELBSG"
      }
    ],
    "Tags": [{ "Key": "Name", "Value": "taskalb" }]
  }
},
"HTTP80Listener":{
  "Type":"AWS::ElasticLoadBalancingV2::Listener",
  "Properties":{
    "DefaultActions":[
      {
        "Type":"redirect",
        "RedirectConfig": {
                       "Protocol": "HTTPS",
                       "Port": 443,
                       "Host": "#{host}",
                       "Path": "/#{path}",
                       "Query": "#{query}",
                       "StatusCode": "HTTP_301"
        }
      }
    ],
    "LoadBalancerArn":{
      "Ref":"taskalb"
    },
    "Port":"80",
    "Protocol":"HTTP"
  }
},
"HTTPSListerner": {
  "Type": "AWS::ElasticLoadBalancingV2::Listener",
  "Properties": {
    "Certificates": [
      {
        "CertificateArn" : "arn:aws:acm:us-east-1:714980237596:certificate/b85a8fdb-0614-4121-afc5-25388397ec0f"
      }
    ],
    "DefaultActions": [
      {
        "Type": "forward",
        "TargetGroupArn": {
          "Ref": "WebServerTargetGroup"
        }
      }
    ],
    "LoadBalancerArn": { "Ref": "taskalb" },
    "Port": "443",
    "Protocol": "HTTPS"
  }
},
"mydns": {
  "Type": "AWS::Route53::RecordSetGroup",
  "Properties": {
    "HostedZoneName": "milinddhondi.ml.",
    "RecordSets": [ {
      "Name": "milinddhondi.ml.",
      "Type": "A",
      "AliasTarget": {
        "HostedZoneId": { "Fn::GetAtt": [ "taskalb", "CanonicalHostedZoneID"]},
        "DNSName": { "Fn::GetAtt": ["taskalb", "DNSName"]}
      }
      }
    ]
   }
},
"AmazonS3FullAccess": {
    "Type": "AWS::IAM::Role",
    "Properties": {
        "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": [
                            "ec2.amazonaws.com"
                        ]
                    },
                    "Action": [
                        "sts:AssumeRole"
                    ]
                }
            ]
        },
        "Path": "/",
        "Policies": [
            {
                "PolicyName": "AmazonS3FullAccess",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [ "S3:*" ],
                            "Resource": "*"
                        }
                    ]
                }
            }
        ]
    }
},
"s3Bucket": {
  "Type": "AWS::S3::Bucket",
  "Properties": {
    "BucketName": "instances3bucket",
    "Tags": [{ "Key": "Name", "Value":  "InstanceS3bucket" }]
  }
},
"s3fullaccessInstanceProfile": {
    "Type": "AWS::IAM::InstanceProfile",
    "Properties": {
        "Path": "/",
        "Roles": [
            {
                "Ref": "AmazonS3FullAccess"
            }
        ]
    }
},
"launchtemplete001": {
     "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
          "LaunchTemplateName": "mywebapps",
          "LaunchTemplateData": {
          "IamInstanceProfile" : {
            "Arn":{ "Fn::GetAtt" : [ "s3fullaccessInstanceProfile", "Arn" ]}
            } ,
          "ImageId": "ami-09af40939a9406b30",
          "InstanceType": "t2.micro",
          "SecurityGroupIds": [ { "Ref": "taskedSG" } ],
          "UserData" : {
              "Fn::Base64":
                  {   "Fn::Join": [
                          "",
                          [
                              "#!/bin/bash -ex\n",
                              "amazon-linux-extras install epel\n",
                              "yum install s3fs* -y\n",
                              "mkdir /s3drive\n",
                              "s3fs instances3bucket /s3drive"
                          ]

                      ]
                  }
          }
               }
        }
  },
  "myASG": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchTemplate": {
                    "LaunchTemplateId": { "Ref": "launchtemplete001" },
                    "Version": { "Fn::GetAtt": [ "launchtemplete001", "LatestVersionNumber" ] }
                },
                "MaxSize": "5",
                "MinSize": "0",
                "DesiredCapacity": "1",
                "TargetGroupARNs": [ { "Ref" : "WebServerTargetGroup" } ],
                "VPCZoneIdentifier": [{ "Ref": "taskedsub1" }, { "Ref": "taskedsub2" }]
            }
        },
        "myCPUPolicy":{
            "Type":"AWS::AutoScaling::ScalingPolicy",
            "Properties":{
              "AutoScalingGroupName":{ "Ref":"myASG" },
              "PolicyType":"TargetTrackingScaling",
              "TargetTrackingConfiguration":{
                "PredefinedMetricSpecification":{
                  "PredefinedMetricType":"ASGAverageCPUUtilization"
                },
                "TargetValue": "70",
              }
            }
          }
 },
    "Outputs": {

    }
}
